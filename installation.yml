---
- hosts: all
  remote_user: pod

  vars:
    # Username
    user: pod
    # Timezone
    timezone: 'Europe/Paris'

  tasks:

    ###################
    # User Management 
    ###################
    #- name: Create user pod
    #  sudo: yes
    #  user: name={{ user }} group="pod"
    #        comment="{{ user }} user"
    #        shell=/bin/bash

    - name: configure sudoers
      sudo: yes
      lineinfile: dest=/etc/sudoers backup=yes state=present regexp=^%{{ user }} insertafter="^# %wheel" line='%{{ user }} ALL=(ALL) ALL'
      tags: config-sudoers



    ###################
    # Time management 
    ###################
    - name: Set local timezone
      copy: content={{ timezone }}
            dest=/etc/timezone
      notify: update tzdata

    - name: Install NTP (and update apt cache for the first install)
      sudo: yes
      remote_user: root
      apt: name=ntp state=present
           update_cache=yes

    - name: Start the ntp service
      service: name=ntp state=started enabled=true

    ############
    # Security 
    ############
    - name: Install fail2ban
      apt: name=fail2ban state=present

    - name: Start fail2ban service
      service: name=fail2ban state=started enabled=true


    ###################
    # Python / Virtualenv
    ###################

    - name: Install environnement systeme
      apt: name={{ item }} state=latest
      sudo: yes
      remote_user: root
      with_items:
        - python-pip
        - python-dev
        - build-essential
        - libmysqlclient-dev
        - graphviz
        - libgraphviz-dev
        - pkg-config
        - libldap2-dev
        - libsasl2-dev
        - libssl-dev
        - libjpeg-dev

    - name: Install usefull system tools
      sudo: yes
      apt: name={{ item }} state=present
      with_items:
        - vim
        - git

    - name: Install virtualenvwrapper
      sudo: yes
      pip: name=virtualenvwrapper

     ##########################################
     # Insert 2 lines at the end of bashrc file
     ##########################################

    #- name: add export WORKON_HOME=$HOME/.virtualenvs at the end of the file
     # lineinfile: dest=/home/pod/.bashrc
      #            insertafter=EOF
       #           line='export WORKON_HOME=$HOME/.virtualenvs\nsource '"/usr/local/bin/virtualenvwrapper.sh"''

    - name: add export WORKON_HOME=$HOME/.virtualenvs at the end of the file
      lineinfile:
        dest: /home/pod/.bashrc
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: 'export WORKON_HOME', line: 'export WORKON_HOME=$HOME/.virtualenvs' }
        - { regexp: 'source /usr/local', line: 'source /usr/local/bin/virtualenvwrapper.sh' }

    - name: source bashrc
      sudo: no   
      shell: source $HOME/.bashrc 
      args:
         executable: /bin/bash

    - name: Run 'which django_pod'
      shell: >
        executable=/bin/bash
        source `which virtualenvwrapper.sh` && mkvirtualenv django_pod
      register: run_cmd

    - name: emplacement project
      sudo: yes
      file: path=/usr/local/django_projects state=directory

    - name: lien symbolique de l'emplacement
      file: src=/usr/local/django_projects dest=/../home/pod/django_projects state=link

    - name: droit du rÃ©pertoire django_projects
      sudo: yes
      remote_user: root
      shell: chown -R pod:pod /usr/local/django_projects 

     #########################
     # Deploying Pod_project 
     #########################
    - name: ajout couleur prompt 
      shell: "sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/' /home/{{user}}/.bashrc"

    - name: ajout option "ls -l" -> "ll"
      #shell: "sed -i 's/#alias ll=\'ls -l\'/alias ll=\'ls -l\'/' /home/{{user}}/.bashrc"
      replace:
        dest=/home/{{user}}/.bashrc
        regexp="#alias ll=\'ls -l\'"
        replace="alias ll=\'ls -l\'"
        backup=yes


    - name: Git clone/pull pod 
      git: repo="https://github.com/ptitloup/pod.git"  
           dest=/usr/local/django_projects/pod

    - name: Install librairies python
      sudo: yes
      shell: pip install -r /home/pod/django_projects/pod/requirements.txt

    - name: Copy fichier configuration wsgi-sample
      copy: src=/home/pod/django_projects/pod/pod_project/pod_project/wsgi-sample.py
            dest=/home/pod/django_projects/pod/pod_project/pod_project/wsgi.py

    - name: Copy fichier configuration settings-sample.py
      copy: src=/home/pod/django_projects/pod/pod_project/pod_project/settings-sample.py
            dest=/home/pod/django_projects/pod/pod_project/pod_project/settings.py

    - name : creation bdd
      shell: python manage.py syncdb --noinput
      args:
         chdir: /home/pod/django_projects/pod/pod_project/
         executable: /bin/bash

    - name : migration des tables
      shell: python ./manage.py migrate
      args:
         chdir: /home/pod/django_projects/pod/pod_project/
         executable: /bin/bash

    #- name : Validation et lancement du serveur .. si il n'y a pas d'erreur vous pouvez le quitter "Control-c"
    #  shell: python django_projects/pod/pod_project/manage.py runserver
    #  args:
    #     executable: /bin/bash

    #Django admin.py create-user
  ###################
  # Handlers
  ###################
  handlers:
    - name: update tzdata
      command: /usr/sbin/dpkg-reconfigure --frontend noninteractive tzdata

